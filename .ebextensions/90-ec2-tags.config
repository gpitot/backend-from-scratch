files:
  "/home/ec2-user/exportvariables.sh":
    mode: "000777"
    owner: ec2-user
    group: ec2-user
    content: |
      #!/usr/bin/env bash
      export OPS_UPTIME_PROFILE=$(cat /opt/elasticbeanstalk/deploy/configuration/containerconfiguration | grep -o -P "(OPS_UPTIME_PROFILE=(\w+))" | cut -d= -f2)
      export BILLING_PRODUCT=$(cat /opt/elasticbeanstalk/deploy/configuration/containerconfiguration | grep -o -P "(BILLING_PRODUCT=(\w+))"  | cut -d= -f2)
      export OPS_BILLING_ENV=$(cat /opt/elasticbeanstalk/deploy/configuration/containerconfiguration | grep -o -P "(OPS_BILLING_ENV=(\w+\-\w+))"  | cut -d= -f2)
      export AWS_REGION=$(cat /etc/elasticbeanstalk/.aws-eb-stack.properties | grep "region=" | cut -d= -f2)
      export EB_ENV_ID=$(cat /etc/elasticbeanstalk/.aws-eb-stack.properties | grep "environment_id=" | cut -d= -f2)
      export CLOUDFORMATION_STACK_ID=$(aws ec2 describe-instances --instance-ids=$(/opt/aws/bin/ec2-metadata -i | cut -d ' ' -f2) --region $AWS_REGION --output text | grep aws:cloudformation:stack-id | cut -f 3)
  "/home/ec2-user/elk-variables.sh":
    mode: "000777"
    owner: ec2-user
    group: ec2-user
    content: |
      export EB_ENV_ID=\"$(cat /etc/elasticbeanstalk/.aws-eb-stack.properties | grep "environment_id=" | cut -d= -f2)\"
      export EB_ENV_ID_WQ=$(cat /etc/elasticbeanstalk/.aws-eb-stack.properties | grep "environment_id=" | cut -d= -f2)
      export ApplicationName=\"ApplicationName=$(aws elasticbeanstalk describe-environments --environment-ids $EB_ENV_ID_WQ --query 'Environments[0].ApplicationName'|cut -d\" -f2)\"
      export EnvironmentName=\"EnvironmentName=$(aws elasticbeanstalk describe-environments --environment-ids $EB_ENV_ID_WQ --query 'Environments[0].EnvironmentName'|cut -d\" -f2)\"
      export EnvironmentId="EnvironmentId=$EB_ENV_ID"
      export InstanceId=\"InstanceId=$(/opt/aws/bin/ec2-metadata --instance-id |cut -d: -f2 |cut -d' ' -f2)\"
      export IpAddress=\"IpAddress=$(/opt/aws/bin/ec2-metadata --local-ipv4 |cut -d: -f2 |cut -d' ' -f2)\"
      export LocalHostname=\"LocalHostname=$(/opt/aws/bin/ec2-metadata --local-hostname |cut -d: -f2 |cut -d' ' -f2)\"
      export InstanceType=\"InstanceType=$(/opt/aws/bin/ec2-metadata --instance-type |cut -d: -f2 |cut -d' ' -f2)\"
      export Zone=\"Zone=$(/opt/aws/bin/ec2-metadata --availability-zone |cut -d: -f2 |cut -d' ' -f2)\"
      export Site=\"Site=$(aws elasticbeanstalk describe-environments --environment-ids $EB_ENV_ID_WQ --query 'Environments[0].ApplicationName'|cut -d\" -f2)\"
      export App_Env=\"App_Env=$(/opt/elasticbeanstalk/bin/get-config optionsettings -n aws:elasticbeanstalk:application:environment -o APP_ENV)\"
      export ELK_ENDPOINT=\"$(/opt/elasticbeanstalk/bin/get-config optionsettings -n aws:elasticbeanstalk:application:environment -o ELASTIC_LOGGING_URL)\"
commands:
  01_add_tags:
    command: "source /home/ec2-user/exportvariables.sh && /opt/aws/bin/ec2-create-tags $(ec2-metadata -i | cut -d ' ' -f2) --tag BillingProduct=$BILLING_PRODUCT --tag BillingEnvironment=$OPS_BILLING_ENV --tag uptimeProfile=$OPS_UPTIME_PROFILE --region $AWS_REGION"
    env:
      EC2_HOME: /opt/aws/apitools/ec2
      EC2_URL: https://ap-southeast-2.ec2.amazonaws.com
      JAVA_HOME: /usr/lib/jvm/jre
      PATH: /bin:/usr/bin:/opt/aws/bin/
    ignoreErrors: "true"
